{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchInput.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","robot","i","SearchInput","change","placeholder","type","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","React","Component","Scroll","style","overflowY","border","height","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","response","json","users","filteredRobots","filter","toLocaleLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAWeA,EATH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,GACtB,OAAQ,sBAAKC,UAAU,oDAAf,UACC,qBAAKC,IAAI,SAAQC,IAAG,+BAA0BH,EAA1B,cACjB,8BAAMF,IACN,8BAAMC,QCaPK,EAfE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACbC,EAAiBD,EAAOE,KAAI,SAACC,EAAMC,GAEjC,OAAO,cAAC,EAAD,CAAMX,KAAMO,EAAOI,GAAGX,KAAMC,MAAOS,EAAMT,MAAOC,GAAIS,OAGlE,OACI,8BACCH,KCFSI,EARK,SAAC,GAAa,IAAZC,EAAW,EAAXA,OAClB,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOW,YAAY,SAASC,KAAK,SAASC,SAAUH,O,4BCgBjDI,E,kDAlBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACGC,MAAM,CACPC,UAAS,GAHH,E,oDAOlB,SAAiBC,EAAOC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACJ,uCAEHG,KAAKL,MAAMO,a,GAhBCC,IAAMC,WCQlBC,EARD,SAACV,GACX,OACI,qBAAKW,MAAO,CAACC,UAAU,SAAUC,OAAO,mBAAoBC,OAAO,SAAnE,SACKd,EAAMO,YCmCJQ,EAhCJ,WAET,MAA0BC,mBAAS,IAAnC,mBAAM3B,EAAN,KAAa4B,EAAb,KACA,EAAoCD,mBAAS,IAA7C,mBAAME,EAAN,KAAkBC,EAAlB,KAEDC,qBAAW,WACRC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OACbA,EAASC,UACTF,MAAK,SAAAG,GAASR,EAAUQ,SAG5B,IAIOC,EAAgBrC,EAAOsC,QAAO,SAAAnC,GAClC,OAAOA,EAAMV,KAAK8C,oBAAoBC,SAASX,EAAYU,wBAE7D,OAAQvC,EAAOyC,OAGd,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,CAAaU,OAXA,SAACoC,GAChBZ,EAAeY,EAAMC,OAAOC,UAW1B,cAAC,EAAD,UACE,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5C,OAAQqC,WAN1B,2CChBWQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5c345325.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card =({name, email,id}) =>{\n    return (<div className='bg-light-green dib brr3 pa3 ma2 grow bw2 shadow-5'>\n             <img alt='robots'src={`https://robohash.org/${id}?200x200`}/>\n                <div>{name}</div>\n                <div>{email}</div>\n            </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({robots}) =>{\nconst cardComponent =  robots.map((robot,i) =>\n    {\n        return <Card name={robots[i].name} email={robot.email} id={i}/>\n    });\n\n return(\n     <div>\n     {cardComponent}\n     </div>\n )\n}\n\n\n\nexport default CardList;","import React from 'react';\n\nconst SearchInput = ({change}) =>{\n    return(\n        <div className='pa2'>\n            <input placeholder='search' type='search' onChange={change}/>\n        </div>\n    )\n\n}\nexport default SearchInput;","import React from 'react';\n\nclass ErrorBoundry extends React.Component{\n    constructor(props){\n        super(props);\n            this.state={\n                hasError:false\n            }\n        \n    }\n    componentDiCatch(error, info){\n        this.setState({hasError:true});\n    }\n\n    render(){\n        if(this.state.hasError){\n            return<h1> oops</h1>;\n        }\n        return this.props.children;\n    }\n}\nexport default ErrorBoundry;\n","import React from 'react';\n\nconst Scroll =(props)=>{\n    return(\n        <div style={{overflowY:'scroll', border:'10px solid green', height:'800px'}}>\n            {props.children}\n        </div>\n\n    )\n}\nexport default Scroll ;","import React, {useState, useEffect}from 'react';\nimport './App.css';\nimport  CardList from '../components/CardList';\nimport  SearchInput from '../components/SearchInput';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport Scroll from '../components/Scroll';\n\n\nconst App =()=>{\n\n  const[robots,setRobots] = useState([]);\n  const[searchField,setSearchField] = useState('');\n\n useEffect (()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => \n      response.json())\n     .then(users =>{setRobots(users)});\n  })\n\n  const onChange1 =(event) =>{\n    setSearchField(event.target.value)\n  }\n\n   const filteredRobots= robots.filter(robot =>{\n     return robot.name.toLocaleLowerCase().includes(searchField.toLocaleLowerCase());\n   })\n   return !robots.length? \n    <div>Loading</div>\n   :\n    <div className=\"App\">\n      <SearchInput change={onChange1}/>\n      <Scroll>\n        <ErrorBoundry>\n            <CardList robots={filteredRobots}/>\n         </ErrorBoundry>\n      </Scroll>\n    </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}